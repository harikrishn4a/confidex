{"_id":"background-only","_rev":"2-2de47227c1df80c3905543a0f2f3b2f7","name":"background-only","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"background-only","version":"0.0.1","keywords":["react","lynx"],"license":"MIT","_id":"background-only@0.0.1","maintainers":[{"name":"huxpro","email":"huxpro@gmail.com"}],"dist":{"shasum":"48464f3df6d6ac02614eaa8307344c470f22d46b","tarball":"https://registry.npmjs.org/background-only/-/background-only-0.0.1.tgz","fileCount":5,"integrity":"sha512-YXR2zshAf3qs3jnpApQaDUG0x4L6YWpSZfLDhdeiCFxfp/n8YwfoAQ1hAigEF3VpXOMOJeZYFWtBbiFv/v2Qfg==","signatures":[{"sig":"MEUCIQDmURMSVkiW90UHLajt3pr7ZhZwHshntmE1KJ5GO7CLJQIgWYS/kbxI5WRQrcZs2UYT5d0SDXEe8PY+p+2IPOIuNlU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2175},"main":"empty.js","type":"module","types":"index.d.ts","exports":{".":{"lepus":{"types":"./index.d.ts","default":"./error.js"},"default":{"types":"./index.d.ts","default":"./empty.js"}}},"gitHead":"1dcf0f6abbff6c48b38bab62191046623b4c3b95","_npmUser":{"name":"huxpro","email":"huxpro@gmail.com"},"_npmVersion":"10.2.4","description":"This is a marker package to indicate that a module can only be used in the Background Thread.","directories":{},"_nodeVersion":"18.19.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/background-only_0.0.1_1721189271157_0.4945112855918463","host":"s3://npm-registry-packages"}}},"time":{"created":"2024-07-17T04:07:51.048Z","modified":"2025-05-08T03:38:53.709Z","0.0.1":"2024-07-17T04:07:51.360Z"},"license":"MIT","keywords":["react","lynx"],"description":"This is a marker package to indicate that a module can only be used in the Background Thread.","maintainers":[{"email":"huxpro@gmail.com","name":"huxpro"},{"email":"haoyang512@hotmail.com","name":"lynxdev-admin"}],"readme":"# Background Only\n\nThis is a marker package to indicate that a module can only be used in the Background thread.\n\n## Example usages\n\nSay we have a `Logger` module that has side effects calling into Native Modules or other APIs that are only available in the \"Background\" environment:\n\n```tsx\n// Logger.js\nimport \"background-only\";\n\nexport function log(msg) {\n  // Notice how we are calling into NativeModules here.\n  NativeModules.hybridMonitor.reportJSError(...);\n}\n```\n\nBy adding `import \"background-only\"` to poison this module, we are now declaring that this module is only safe to be bundled in a \"Background\" environment, protecting this module from being accidentally bundled into a \"Main thread\" environment by throwing an error at runtime.\n\nFor example, if we use `log` in a desirable position from a React component, such as in `useEffect` or an event handler, the `log` will work as expected:\n\n```tsx\n// App.jsx\nimport { log } from \"./Logger\";\n\nfunction App() {\n  useEffect() {\n    log();\n  }\n  return <view />\n}\n```\n\nHowever, if we use `log` in a undesirable position from a React component, such as in the body of the rendering function, it will throw an error at runtime time:\n\n```tsx\n// App.jsx\nimport { log } from \"./Logger\";\n\nfunction App() {\n  // throw!\n  log();\n  return <view />\n}\n```\n\n\n## Credits\n\nThis is inspired by the [`server-only`](https://www.npmjs.com/package/server-only?activeTab=readme) package of React.\n","readmeFilename":"README.md"}